# Prompt
autoload -U colors && colors
setopt prompt_subst
function git_prompt_info() {
    function __git_prompt_git() {
        GIT_OPTIONAL_LOCKS=0 command git "$@"
    }
    if ! __git_prompt_git rev-parse --git-dir &>/dev/null; then
        return 0
    fi
    local ref
    ref=$(__git_prompt_git symbolic-ref --short HEAD 2>/dev/null) ||
        ref=$(__git_prompt_git rev-parse --short HEAD 2>/dev/null) ||
        return 0
    local dirty
    [[ -n $(__git_prompt_git status --porcelain 2>/dev/null | tail -1) ]] && dirty=" ✗"
    echo " %{$fg[yellow]%}git:(%{$fg[red]%}${ref}%{$fg[yellow]%})%{$fg[red]%}${dirty}"
}
autoload -Uz git_prompt_info
function precmd() {
    git_prompt_info >/dev/null
}
PROMPT=" %B%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ ) "
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ] || [ "$(whoami)" = "ewibowo" ]; then
    # Add username indicator if ssh
    PROMPT+="%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[cyan]%}@%{$fg[yellow]%}%M%{$fg[red]%}] "
fi
PROMPT+='%{$fg[cyan]%}%1~$(git_prompt_info)%{$reset_color%}%b '

# Options
setopt autocd   # Enter directory name to cd
stty stop undef # Disable ctrl+s freeze
setopt interactive_comments

# Edit current line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

# GPG
export GPG_TTY="$(tty)"

alias vim='nvim'
